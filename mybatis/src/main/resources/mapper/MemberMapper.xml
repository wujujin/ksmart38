<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="ksmart38.mybatis.dao.MemberMapper">
	<resultMap type="Member" id="memberResultMap">
		<result property="memberId" column="m_id" />
		<result property="memberPw" column="m_pw" />
		<result property="memberName" column="m_name" />
		<result property="memberLevel" column="m_level" />
		<result property="memberEmail" column="m_email" />
		<result property="memberAddr" column="m_addr" />
		<result property="memberRegdate" column="m_reg_date" />
	</resultMap>
	<select id="getMemberList" parameterType="String" resultMap="memberResultMap">
		SELECT
		 	 m.m_id
			,m.m_pw
			,m.m_name
			,m.m_level
			,m.m_email
			,m.m_addr
			,m.m_reg_date
		FROM 
			tb_member AS m
			LEFT JOIN
			tb_member_level AS l
			ON m.m_level = l.level_num
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="searchKey != null and searchKey != ''.toString()">
				<choose>
					<when test="searchKey == 'level_name'">
						m.m_level = ${searchValue}
					</when>
					<otherwise>
						${searchKey} like CONCAT('%',#{searchValue},'%')
					</otherwise>
				</choose>
			</if>
		</trim>
	</select>
	<select id="getLoginHistoryCount" resultType="int">
		SELECT
			COUNT(1)
		FROM
			tb_login
	</select>
	
	<select id="getLoginHistory" parameterType="Map" resultType="Map">
		SELECT
			login_num 	 	AS loginNum
			,login_id 	 	AS loginId
			,login_date	 	AS loginDate
			,logout_date	AS logoutDate
		FROM
			tb_login
		LIMIT #{startNum}, #{rowPerPage}
	
	</select>
	<update id="modifyMember" parameterType="Member">
		UPDATE tb_member
		<trim prefix="SET" prefixOverrides=",">
			<if test="memberPw != null and memberPw != ''.toString()">
				m_pw=#{memberPw}
			</if>
			<if test="memberName != null and memberName != ''.toString()">
				,m_name=#{memberName}
			</if>
			<if test="memberLevel != null and memberLevel != ''.toString()">
				,m_level=#{memberLevel}
			</if>
			<if test="memberEmail != null and memberEmail != ''.toString()">
				,m_email=#{memberEmail}
			</if>
			<if test="memberAddr != null and memberAddr != ''.toString()">
				,m_addr=#{memberAddr}
			</if>
		</trim>
		
		WHERE m_id=#{memberId}
	</update>
	
	<delete id="removeMember" parameterType="String" >
		DELETE FROM tb_login WHERE login_id = #{memberId};
		DELETE FROM tb_member WHERE m_id = #{memberId};
	</delete>
	<delete id="removeOrder" parameterType="String" >
		DELETE FROM tb_order WHERE o_id = #{memberId};
	</delete>
	<delete id="removeGoods" parameterType="String" >
		DELETE FROM tb_goods WHERE g_seller_id = #{memberId};
	</delete>
	<delete id="removeOrderSeller" parameterType="String" >
		DELETE
			o
		FROM
			tb_goods AS g
			INNER JOIN
			tb_order AS o
			ON g.g_code = o.o_g_code
		WHERE g.g_seller_id = #{memberId};
	</delete>

	<select id="getMemberInfoById" parameterType="String" resultMap="memberResultMap">
		SELECT
			  m_id
			, m_pw
			, m_name
			, m_level
			, m_email
			, m_addr
			, m_reg_date
		FROM 
			tb_member
		WHERE
			m_id = #{memberId};
	</select>
	

	<insert id="addMember" parameterType="Member">
		INSERT INTO tb_member
			( m_id
			, m_pw
			, m_name
			, m_level
			, m_email
			, m_addr
			, m_reg_date
			)
		VALUES 
			( #{memberId}
			, #{memberPw}
			, #{memberName}
			, #{memberLevel}
			, #{memberEmail}
			, #{memberAddr}
			, date(NOW()) 
			)
	</insert>
</mapper>